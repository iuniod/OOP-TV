Starting audit...
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/Main.java:16:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/Main.java:17:5: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/checker/CheckStyleConstants.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/page/Page.java:4:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/page/Register.java:4:3: Class 'Register' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/page/Login.java:4:3: Class 'Login' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/page/HomepageNeautentificat.java:5:3: Class 'HomepageNeautentificat' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomepageNeautentificat' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/page/HomepageAutentificat.java:4:3: Class 'HomepageAutentificat' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'HomepageAutentificat' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/InputFormat.java:17:3: Class 'InputFormat' looks like designed for extension (can be subclassed), but the method 'setUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputFormat' final or making the method 'setUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/InputFormat.java:21:3: Class 'InputFormat' looks like designed for extension (can be subclassed), but the method 'setMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputFormat' final or making the method 'setMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/InputFormat.java:25:3: Class 'InputFormat' looks like designed for extension (can be subclassed), but the method 'setActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputFormat' final or making the method 'setActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/InputFormat.java:29:3: Class 'InputFormat' looks like designed for extension (can be subclassed), but the method 'getUsers' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputFormat' final or making the method 'getUsers' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/InputFormat.java:33:3: Class 'InputFormat' looks like designed for extension (can be subclassed), but the method 'getMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputFormat' final or making the method 'getMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/InputFormat.java:37:3: Class 'InputFormat' looks like designed for extension (can be subclassed), but the method 'getActions' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'InputFormat' final or making the method 'getActions' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:19:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:23:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:27:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:31:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:35:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:39:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:43:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:47:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:51:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'setNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'setNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:55:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:59:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getYear' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getYear' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:63:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:67:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getGenres' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getGenres' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:71:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:75:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getCountriesBanned' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getCountriesBanned' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:79:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumLikes' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumLikes' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:83:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/movie/Movie.java:87:3: Class 'Movie' looks like designed for extension (can be subclassed), but the method 'getNumRatings' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Movie' final or making the method 'getNumRatings' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:13:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'setName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'setName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:17:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'setPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'setPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:21:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'setAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'setAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:25:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'setCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'setCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:29:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'setBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'setBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:33:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:37:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'getPassword' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'getPassword' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:41:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'getAccountType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'getAccountType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:45:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:49:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'getBalance' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'getBalance' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:53:3: Class 'Credential' looks like designed for extension (can be subclassed), but the method 'equals' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Credential' final or making the method 'equals' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:53:3: Definition of 'equals()' without corresponding definition of 'hashCode()'. [EqualsHashCode]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/Credential.java:54:25: Parameter obj should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:10:38: '15' is a magic number. [MagicNumber]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:23:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:27:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setTokenAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setTokenAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:31:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:35:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:39:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:43:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:47:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'setRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'setRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:51:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:55:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getName' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getName' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:55:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:62:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getCountry' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getCountry' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:62:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:69:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getTokenAccount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getTokenAccount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:73:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getNumFreePremiumMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getNumFreePremiumMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:77:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getPurchasedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getPurchasedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:81:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getWatchedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getWatchedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:85:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getLikedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getLikedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/user/User.java:89:3: Class 'User' looks like designed for extension (can be subclassed), but the method 'getRatedMovies' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'User' final or making the method 'getRatedMovies' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:20:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:24:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:28:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:32:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:36:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:40:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:44:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:48:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:52:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'setRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'setRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:56:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getType' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getType' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:60:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getPage' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getPage' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:64:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getMovie' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getMovie' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:68:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFeature' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFeature' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:72:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCredentials' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCredentials' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:76:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getStartsWith' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getStartsWith' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:80:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getFilters' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getFilters' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:84:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getCount' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getCount' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:88:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'getRate' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'getRate' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:92:3: Class 'Action' looks like designed for extension (can be subclassed), but the method 'toString' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Action' final or making the method 'toString' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:92:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:93:31: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:94:36: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/Action.java:95:38: '+' should be on a new line. [OperatorWrap]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Sort.java:10:3: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Sort.java:14:3: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'setDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'setDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Sort.java:18:3: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getRating' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getRating' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Sort.java:22:3: Class 'Sort' looks like designed for extension (can be subclassed), but the method 'getDuration' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Sort' final or making the method 'getDuration' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Contain.java:12:3: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Contain.java:16:3: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'setGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'setGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Contain.java:20:3: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getActors' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getActors' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Contain.java:24:3: Class 'Contain' looks like designed for extension (can be subclassed), but the method 'getGenre' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Contain' final or making the method 'getGenre' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Filter.java:10:3: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Filter.java:14:3: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'setContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'setContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Filter.java:18:3: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getSort' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getSort' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/input/action/filters/Filter.java:22:3: Class 'Filter' looks like designed for extension (can be subclassed), but the method 'getContains' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Filter' final or making the method 'getContains' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:7:1: Class PageWorkFlow should be declared as final. [FinalClass]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:8:17: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:8:55: Name 'pageWorkFlow' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:10: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:11: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:14: Line is longer than 100 characters (found 101). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:16: Line is longer than 100 characters (found 112). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:18:17: 'static' modifier out of order with the JLS suggestions. [ModifierOrder]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/PageWorkFlow.java:18:37: Name 'instance' must match pattern '^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$'. [ConstantName]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:11:1: Class Database should be declared as final. [FinalClass]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:32:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:41:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:76:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:78:7: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:84:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:86:7: 'if' construct must use '{}'s. [NeedBraces]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:92:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/database/Database.java:92:23: Parameter user should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/CommandFactory.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/CommandFactory.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/CommandFactory.java:4:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/AbstractFactory.java:7:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/AbstractFactory.java:7:37: Redundant 'final' modifier. [RedundantModifier]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:9:3: Class 'OnPageFactory' looks like designed for extension (can be subclassed), but the method 'getAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'OnPageFactory' final or making the method 'getAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:12:23: '{' at column 23 should have line break after. [LeftCurly]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:12:23: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:12:24: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:12:49: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:12:50: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:13:26: '{' at column 26 should have line break after. [LeftCurly]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:13:26: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:13:27: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:13:54: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:13:55: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:14:18: '{' at column 18 should have line break after. [LeftCurly]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:14:18: '{' is not followed by whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:14:19: 'return' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:14:30: ';' is not followed by whitespace. [WhitespaceAfter]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/OnPageFactory.java:14:31: '}' is not preceded with whitespace. [WhitespaceAround]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/ChangePageFactory.java:8:3: Class 'ChangePageFactory' looks like designed for extension (can be subclassed), but the method 'getAction' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePageFactory' final or making the method 'getAction' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/Command.java:10:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/Command.java:11:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/Command.java:12:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:22:3: Class 'ChangePage' looks like designed for extension (can be subclassed), but the method 'isExecutable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePage' final or making the method 'isExecutable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:28:3: Class 'ChangePage' looks like designed for extension (can be subclassed), but the method 'executeSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePage' final or making the method 'executeSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:29:30: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:29:51: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:29:72: Parameter myOutput should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:36:3: Class 'ChangePage' looks like designed for extension (can be subclassed), but the method 'executeError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'ChangePage' final or making the method 'executeError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:37: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:37:28: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:37:49: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/ChangePage.java:37:70: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:22:3: Class 'Register' looks like designed for extension (can be subclassed), but the method 'isExecutable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'isExecutable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:33:3: Class 'Register' looks like designed for extension (can be subclassed), but the method 'executeSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'executeSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:34:30: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:34:51: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:34:72: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:42:3: Class 'Register' looks like designed for extension (can be subclassed), but the method 'executeError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Register' final or making the method 'executeError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:43: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:43:28: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:43:49: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Register.java:43:70: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:22:3: Class 'Login' looks like designed for extension (can be subclassed), but the method 'isExecutable' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'isExecutable' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:37:3: Class 'Login' looks like designed for extension (can be subclassed), but the method 'executeSuccess' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'executeSuccess' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:38: Line is longer than 100 characters (found 104). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:38:30: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:38:51: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:38:72: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:45:3: Class 'Login' looks like designed for extension (can be subclassed), but the method 'executeError' does not have javadoc that explains how to do that safely. If class is not designed for extension consider making the class 'Login' final or making the method 'executeError' static/final/abstract/empty, or adding allowed annotation for the method. [DesignForExtension]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:46: Line is longer than 100 characters (found 102). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:46:28: Parameter mapper should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:46:49: Parameter arrayNode should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/command/commands/Login.java:46:70: Parameter output should be final. [FinalParameters]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/Output.java:14:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/Output.java:18:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/Output.java:33: Line is longer than 100 characters (found 110). [LineLength]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/Output.java:33:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/OutputFactory.java:3:1: Utility classes should not have a public or default constructor. [HideUtilityClassConstructor]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/OutputFactory.java:4:3: Missing a Javadoc comment. [MissingJavadocMethod]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/OutputFormat.java:13:3: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/output/OutputFormat.java:20:3: Redundant 'public' modifier. [RedundantModifier]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/Test.java:1: File does not end with a newline. [NewlineAtEndOfFile]
[ERROR] /home/iustina/GITHUB PROJECTS/POO TV/./src/Test.java:8:28: Using the '.*' form of import should be avoided - java.util.concurrent.*. [AvoidStarImport]
Audit done.
Checkstyle ends with 183 errors.
